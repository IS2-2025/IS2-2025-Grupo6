name: Issue Status Automation

on:
  issues:
    types: [assigned]
  create:
  pull_request:
    types: [closed]

jobs:
  set-issue-to-todo:
    if: github.event_name == 'issues' && github.event.action == 'assigned'
    runs-on: ubuntu-latest
    steps:
      - name: Set issue status to To Do
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number;
            await github.issues.addLabels({
              ...context.repo,
              issue_number,
              labels: ['To Do']
            });

  set-issue-to-in-process:
    if: github.event_name == 'create' && github.event.ref_type == 'branch'
    runs-on: ubuntu-latest
    steps:
      - name: Set issue status to In Process
        uses: actions/github-script@v7
        with:
          script: |
            // Extract issue number from branch name (e.g., issue-15)
            const match = github.event.ref.match(/issue-(\d+)/);
            if (match) {
              const issue_number = Number(match[1]);
              await github.issues.addLabels({
                ...context.repo,
                issue_number,
                labels: ['In Process']
              });
            }

  set-issue-to-done:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Set issue status to Done
        uses: actions/github-script@v7
        with:
          script: |
            // Get pull request object safely
            const pr = context.payload && context.payload.pull_request;
            if (!pr) {
              core && core.info && core.info('No pull_request in payload; nothing to do.');
              return;
            }

            const pr_title = pr.title || '';
            let match = pr_title.match(/#(\d+)/);
            if (!match) {
              match = (pr.body || '').match(/#(\d+)/);
            }
            if (match) {
              const issue_number = Number(match[1]);
              await github.issues.addLabels({
                ...context.repo,
                issue_number,
                labels: ['Done']
              });
            } else {
              // No issue reference found in PR title/body
              console.log('No issue reference found in PR title/body.');
            }
